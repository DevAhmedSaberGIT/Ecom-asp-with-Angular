 هيكل المشروع
 ✅ الطبقات الموجودة:
1. Presentation Layer (واجهة برمجية / API Layer):
موجودة في:

Ecom.API

Controllers

Mapping

دي الطبقة اللي بتتعامل مع الطلبات (Requests) والردود (Responses). مثلاً:

Controllers: تستقبل الطلبات من المستخدمين.

Mapping: غالبًا تحتوي على AutoMapper أو أدوات مشابهة لتحويل البيانات من كائن إلى آخر.

2. Application / Domain Layer (طبقة الأعمال والقواعد):
موجودة في:

Ecom.Core

DTO: لنقل البيانات.

Entities: الكيانات (Models) اللي بتمثل الدومين.

Interfaces: تعريفات الخدمات أو الـRepositories.

دي الطبقة اللي فيها منطق العمل (Business Logic) أو تعريفاته.

3. Infrastructure Layer (طبقة البيانات والبنية التحتية):
موجودة في:

Ecom.infrastructure

Data: غالباً فيها الـDbContext و Configurations.

Data-Migration: للترحيل (Migration).

Repositories: لتطبيق الـInterfaces.

infrastructureRegeneration.cs: غالباً لتسجيل الخدمات داخل الـDI Container.

دي الطبقة اللي بتتعامل مع قواعد البيانات، الملفات، والموارد الخارجية.

📦 النمط العام:
Layered Architecture (أو Clean Architecture لو اتوسعت أكتر).

فيه فصل واضح بين:

العرض (API).

المنطق (Core).

الوصول للبيانات (Infrastructure).

✅ مميزات هذا النمط:
قابلية للتوسع والصيانة.

سهولة في الاختبار (Testability).

كل طبقة لها مسؤولية واضحة.

src
├── Ecom.API
│   ├── Controllers
│   │   └── BaseController.cs
│   ├── Mapping
│   └── Helper
├── Ecom.Core
│   ├── DTO
│   ├── Entities
│   └── Interfaces
└── Ecom.infrastructure
    ├── Data
    │   └── Config
    ├── Data-Migration
    ├── Repositories
    ├── Services
    └── infrastructureRegeneration.cs
